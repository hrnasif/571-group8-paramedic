% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_paramedic.R, R/run_paramedic.R
\name{run_paramedic}
\alias{run_paramedic}
\title{Generate predictions based on a paramedic model fit}
\usage{
run_paramedic(
  W,
  V,
  X = V[, 1, drop = FALSE],
  k = 0,
  n_iter = 10500,
  n_burnin = 10000,
  n_chains = 4,
  stan_seed = 4747,
  centered = FALSE,
  inits_lst = NULL,
  sigma_beta = sqrt(50),
  sigma_Sigma = sqrt(50),
  alpha_sigma = 2,
  kappa_sigma = 1,
  alpha_phi = 0,
  beta_phi = 0,
  sigma_xi = 1,
  ...
)

run_paramedic(
  W,
  V,
  X = V[, 1, drop = FALSE],
  k = 0,
  n_iter = 10500,
  n_burnin = 10000,
  n_chains = 4,
  stan_seed = 4747,
  centered = FALSE,
  inits_lst = NULL,
  sigma_beta = sqrt(50),
  sigma_Sigma = sqrt(50),
  alpha_sigma = 2,
  kappa_sigma = 1,
  alpha_phi = 0,
  beta_phi = 0,
  sigma_xi = 1,
  ...
)
}
\arguments{
\item{W}{The relative abundance data, e.g., from broad range 16S sequencing with "universal" primers. Expects data (e.g., matrix, data.frame, tibble) with sample identifiers in the first column. Sample identifiers must be the same between W and V, and the column must have the same name in W and V.}

\item{V}{The absolute abundance data, e.g., from taxon-specific absolute primers. Expects data (e.g., matrix, data.frame, tibble) with sample identifiers in the first column. Sample identifiers must be the same between W and V, and the column must have the same name in W and V.}

\item{X}{The covariate data. Expects data (e.g., matrix, data.frame, tibble) with sample identifiers in the first column. Sample identifiers must be the same between W, V, and X, and the column must have the same name in W, V, and X. If X only consists of the subject identifiers, then no covariates are used.}

\item{k}{the number of batches that the relative abundance data W were analyzed in. If k = 0 (the default), then batch effects are not considered.}

\item{n_iter}{The total number of iterations per chain to be run by the Stan algorithm. Defaults to 10500.}

\item{n_burnin}{The total number of warmups per chain to be run by the Stan algorithm. Defaults to 10000.}

\item{n_chains}{The total number of chains to be run by the Stan algorithm. Defaults to 4.}

\item{stan_seed}{The random number seed to initialize.}

\item{centered}{If \code{TRUE}, uses a centered parameterization on the true concentrations \eqn{\mu}; if \code{FALSE} (the default), uses a non-centered parameterization.}

\item{inits_lst}{An optional list of initial values of the parameters. Must be a named list; see \code{\link[rstan]{stan}}.}

\item{sigma_beta}{Hyperparameter specifying the prior variance on \eqn{\beta_0}. Defaults to \eqn{\sqrt{50}}.}

\item{sigma_Sigma}{Hyperparameter specifying the prior variance on \eqn{\Sigma}. Defaults to \eqn{\sqrt{50}}.}

\item{alpha_sigma}{Hyperparameter specifying the shape parameter of the prior distribution on \eqn{\sigma_e}. Defaults to 2.}

\item{kappa_sigma}{Hyperparameter specifying the scale parameter of the prior distribution on \eqn{\sigma_e}. Defaults to 1.}

\item{alpha_phi}{Hyperparameter specifying the shape parameter of the prior distribution on \eqn{\phi}. Defaults to 0; a negative binomial model can be specified if both \code{alpha_phi} and \code{beta_phi} are nonzero.}

\item{beta_phi}{Hyperparameter specifying the rate parameter of the prior distribution on \eqn{\phi}. Defaults to 0; a negative binomial model can be specified if both \code{alpha_phi} and \code{beta_phi} are nonzero.}

\item{sigma_xi}{Hyperparameters specifying the variance of efficiencies over batches. Only used if \code{k} is greater than zero. Defaults to 1.}

\item{...}{other arguments to pass to \code{\link[rstan]{sampling}} (e.g., control).}

\item{beta_0}{The posterior distribution on \eqn{\beta_0} (the intercept in the distribution on concentrations \eqn{\mu}), resulting from a call to \code{run_paramedic}.}

\item{beta_1}{The posterior distribution on \eqn{\beta_0} (the slope in the distribution on concentrations \eqn{\mu}; only used if X consists of more than just sample identifiers), resulting from a call to \code{run_paramedic}.}

\item{Sigma}{The posterior distribution on \eqn{\Sigma} (the variance in the distribution on concentrations \eqn{\mu}).}

\item{sigma_e}{The posterior distribution on \eqn{\sigma_e} (the variance of the efficiencies); only used if both \code{alpha_sigma} and \code{kappa_sigma} below are nonzero.}

\item{phi}{The posterior distribution on \eqn{\phi} (the overdispersion parameter on V); only used if both \code{alpha_phi} and \code{beta_phi} below are nonzero.}
}
\value{
An object of class \code{stanfit}.

An object of class \code{stanfit}.
}
\description{


Estimate concentrations (and efficiencies, if applicable) by combining absolute and relative abundance data.
}
\details{
Using the posterior distributions from a call to \code{run_paramedic}, generate predicted values.

We fit a hierarchical model in Stan to the data, with goal to estimate true concentration for all taxa. There are two available hierarchical models. The two only differ in the way that the true concentration is parameterized. While these hierarchical models are mathematically identical, they are fit differently by Stan. The first hierarchical model is a "centered" model, where \deqn{\beta_0 ~ N(0, \sqrt{50})} \deqn{\log \Sigma ~ N(0, \sqrt{50})} \deqn{\log \mu ~ N(\beta_0 + X\beta_1, \Sigma).} We call this model \code{variable_efficiency_centered.stan}. The second hierarchical model is a "noncentered" model, where \deqn{\beta_0 ~ N(0, \sqrt{50})} \deqn{\log \Sigma ~ N(0, \sqrt{50})} \deqn{\log \gamma ~ N(0, I)} \deqn{\log \mu = \sqrt{\Sigma} \log \gamma + \beta_0 + X\beta_1.} We call this model \code{variable_efficiency.stan}.
In most cases, we suggest using the noncentered model. However, if the model does not converge in a reasonable amount of time using the noncentered model, consider trying the centered model.
}
\examples{
## load the package, read in example data
library("paramedic")
data(example_16S_data)
data(example_qPCR_data)
## generate a train/test split
set.seed(1234)
folds <- sample(1:2, size = nrow(example_16S_data), replace = TRUE)

## run paramedic (with an extremely small number of iterations, for illustration only)
## on only the first 10 taxa, and on a subset of the data
mod <- run_paramedic(W = example_16S_data[folds == 1, 1:10], 
V = example_qPCR_data[folds == 1, ], n_iter = 30, n_burnin = 25, 
n_chains = 1, stan_seed = 4747)

# generate predictions on test data
ext_mod <- rstan::extract(mod)
beta0_post <- ext_mod$beta_0
sigma_post <- ext_mod$Sigma
sigmae_post <- ext_mod$sigma_e
pred_mod <- predict_paramedic(beta_0 = beta0_post, Sigma = sigma_post,
sigma_e = sigmae_post, ) 

## load the package, read in example data
library("paramedic")
data(example_16S_data)
data(example_qPCR_data)

## run paramedic (with an extremely small number of iterations, for illustration only)
## on only the first 10 taxa
mod <- run_paramedic(W = example_16S_data[, 1:10], V = example_qPCR_data,
n_iter = 30, n_burnin = 25, n_chains = 1, stan_seed = 4747)

}
\seealso{
\code{\link[rstan]{stan}} and \code{\link[rstan]{sampling}} for specific usage of the \code{stan} and \code{sampling} functions; \code{\link[paramedic]{run_paramedic}} for usage of the \code{run_paramedic} function.

\code{\link[rstan]{stan}} and \code{\link[rstan]{sampling}} for specific usage of the \code{stan} and \code{sampling} functions.
}
