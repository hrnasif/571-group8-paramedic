% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_quantile_interval.R
\name{gen_quantile_interval}
\alias{gen_quantile_interval}
\title{Generate a Poisson-quantile-based prediction interval for qPCR}
\usage{
gen_quantile_interval(mu_quantiles, mu_samps, alpha = 0.05,
  type = "credible_quantiles", div_num = 1)
}
\arguments{
\item{mu_quantiles}{the (alpha/2, 1 - alpha/2) quantiles from the MCMC sampling distribution for the true absolute concentration \eqn{\mu}; only supply if type = "credible_quantiles" (a matrix of dimension N (the sample size) x q (the number of taxa) by 2).}

\item{mu_samps}{the estimated concentrations [an array with dimension (number of MCMC samples) by N by q]; only supply if type = "sample_quantiles".}

\item{alpha}{the desired level (defaults to 0.05, corresponding to an interval using the 2.5\% and 97.5\% quantiles)}

\item{type}{the type of intervals desired, either "credible_quantiles" or "sample_quantiles" (please see Details for more information on the difference between these two types).}

\item{div_num}{the number to multiply by.}
}
\value{
A (1 - \eqn{\alpha})x100\% Poisson-quantile-based prediction interval for each qPCR
}
\description{
Return a Poisson-quantile-based prediction interval for qPCR values given Markov Chain Monte Carlo samples for the estimated concentrations.
}
\examples{
## load the package, read in example data
library("paramedic")
data(example_16S_data)
data(example_qPCR_data)

## run paramedic (with an extremely small number of iterations, for illustration only)
on only the first 10 taxa
mod <- run_paramedic(W = example_16S_data[, 1:10], V = example_qPCR_data,
stan_model = stanmodels$variable_efficiency, n_iter = 30, n_burnin = 25, n_chains = 1, stan_seed = 4747,
params_to_save = c("mu", "Sigma", "beta", "e"))
## get model summary
mod_summ <- rstan::summary(mod, probs = c(0.025, 0.975))$summary
## get samples
mod_samps <- rstan::extract(mod)
## extract relevant summaries
summs <- extract_posterior_summaries(stan_mod = mod_summ, stan_samps = mod_samps, taxa_of_interest = 1:3,
mult_num = 1, level = 0.95, interval_type = "quantile")

}
