% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_posterior_summaries.R
\name{extract_posterior_summaries}
\alias{extract_posterior_summaries}
\title{Extract posterior summaries from a hierarchical model fit}
\usage{
extract_posterior_summaries(
  stan_mod,
  stan_samps,
  taxa_of_interest,
  mult_num = 1,
  level = 0.95,
  interval_type = "wald"
)
}
\arguments{
\item{stan_mod}{the model summary object from Stan.}

\item{stan_samps}{the list of MCMC samples from Stan.}

\item{taxa_of_interest}{the indices of the taxa for which point estimates and posterior summaries are desired.}

\item{mult_num}{the number to multiply the resulting estimates and standard deviations by (defaults to 1).}

\item{level}{the \code{alpha} level for prediction intervals (defaults to 0.95, for a nominal 95\% prediction interval).}

\item{interval_type}{the type of prediction interval desired (defaults to "wald", but "quantile" is also acceptable).}
}
\value{
An object of class \code{paramedic}. See Details for more information
}
\description{
Return point estimates and credible intervals for the true concentration, and point estimates and prediction intervals for estimated qPCR obtained through a Stan fit.
}
\details{
A \code{paramedic} object is a list containing the following elements:
\itemize{
 \item{estimates}{ - the point estimates of qPCR (a matrix with dimension sample size by number of taxa).}
 \item{pred_intervals}{ - predction intervals for qPCR (an array with dimension sample size by 2 by number of taxa).}
 \item{est_efficiency}{ - point estimates for estimated varying efficiency, if varying efficiency was modeled (a vector of length number of taxa); otherwise, NA.}
 \item{efficiency_intervals}{ - posterior level \code{level}\eqn{\times}100\% confidence intervals for the true efficiency, if efficiency was modeled (a matrix of dimension number of taxa by 2); otherwise, NA.}
}
}
\examples{
# load the package, read in example data
library("paramedic")
data(example_16S_data)
data(example_qPCR_data)

# run paramedic (with an extremely small number of iterations, for illustration only)
# on only the first 10 taxa
mod <- run_paramedic(W = example_16S_data[, 1:10], V = example_qPCR_data,
n_iter = 30, n_burnin = 25, 
n_chains = 1, stan_seed = 4747)

# get summary, samples
mod_summ <- rstan::summary(mod, probs = c(0.025, 0.975))$summary
mod_samps <- rstan::extract(mod$stan_fit)

# extract relevant summaries
summs <- extract_posterior_summaries(stan_mod = mod_summ, stan_samps = mod_samps, 
taxa_of_interest = 1:3,
mult_num = 1, level = 0.95, interval_type = "wald")

}
